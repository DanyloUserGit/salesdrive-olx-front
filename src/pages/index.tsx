import Button from "@/components/Button";
import Card from "@/components/Card";
import Loader from "@/components/Loader";
import Pagination from "@/components/Pagination";
import Search from "@/components/Search";
import Wrapper from "@/components/Wrapper";
import { usePagination } from "@/store/usePagination";
import { useProducts } from "@/store/useProducts";
import { Product } from "@/types";
import axios from "axios";
import Head from "next/head";
import { useRouter } from "next/navigation";
import { useEffect, useState } from "react";

export default function Home() {
  const { page } = usePagination();
  const { setSelectProduct, selectProduct, setProduct, product } =
    useProducts();
  const router = useRouter();
  const [totalPages, setTotalPages] = useState(1);
  const [search, setSearch] = useState("");
  const [products, setProducts] = useState<Product[]>([]);
  const [loader, setLoader] = useState(false);
  useEffect(() => {
    const fetchProducts = async () => {
      try {
        setLoader(true);
        const res = await axios.get(
          `http://localhost:8000/salesdrive/page/${page}`
        );
        setProducts(res.data.products); // або res.data, залежить від API
        setTotalPages(res.data.totalPages || 1);
      } catch (error) {
        console.error(error);
      } finally {
        setLoader(false);
      }
    };

    fetchProducts();
  }, [page]);
  useEffect(() => {
    const fetchProducts = async () => {
      try {
        setLoader(true);
        const res = await axios.get(
          `http://localhost:8000/salesdrive/search?query=${search}`
        );
        setProducts(res.data.products);
      } catch (error) {
        console.error(error);
      } finally {
        setLoader(false);
      }
    };

    fetchProducts();
  }, [search]);

  return (
    <>
      <Head>
        <title>Sales Drive - OLX</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Wrapper>
        <div className="flex gap-2 items-center">
          {" "}
          <h1 className="text-light-text text-[24px] font-bold">
            Вивантаження товарів на OLX
          </h1>
          <Button onClick={() => {}} isActive={true} text="Вивантажити" />
        </div>
        <Search s={search} setS={setSearch} />
        <div className="mt-2" />
        <div className="flex gap-2">
          <Button
            onClick={() => {
              setSelectProduct(!selectProduct);
              setProduct([]);
            }}
            isActive={true}
            text="Обрати товари"
          />
          {product.length ? (
            <Button
              onClick={() => {
                setSelectProduct(!selectProduct);
                router.push("/edit");
              }}
              isActive={true}
              text="Змінити ціну/вивантажити"
            />
          ) : (
            ""
          )}
        </div>

        <div className="flex flex-wrap w-full mt-4 py-5 gap-4 justify-center">
          {loader ? (
            <Loader />
          ) : (
            <>
              {products.map((item) => (
                <Card card={item} key={item.id} />
              ))}
            </>
          )}
        </div>
        <Pagination totalPages={totalPages} />
      </Wrapper>
    </>
  );
}
